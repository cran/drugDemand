// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// f_dose_ongoing_cpp
DataFrame f_dose_ongoing_cpp(const StringVector usubjid, const NumericVector V, const NumericVector C, const NumericVector D, const std::string model_ki, const NumericVector theta_ki, const std::string model_ti, const NumericVector theta_ti);
RcppExport SEXP _drugDemand_f_dose_ongoing_cpp(SEXP usubjidSEXP, SEXP VSEXP, SEXP CSEXP, SEXP DSEXP, SEXP model_kiSEXP, SEXP theta_kiSEXP, SEXP model_tiSEXP, SEXP theta_tiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector >::type usubjid(usubjidSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type V(VSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type C(CSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type D(DSEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_ki(model_kiSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_ki(theta_kiSEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_ti(model_tiSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_ti(theta_tiSEXP);
    rcpp_result_gen = Rcpp::wrap(f_dose_ongoing_cpp(usubjid, V, C, D, model_ki, theta_ki, model_ti, theta_ti));
    return rcpp_result_gen;
END_RCPP
}
// f_dose_new_cpp
DataFrame f_dose_new_cpp(const StringVector usubjid, const NumericVector V, const NumericVector C, const NumericVector D, const std::string model_k0, const NumericVector theta_k0, const std::string model_t0, const NumericVector theta_t0, const std::string model_t1, const NumericVector theta_t1, const std::string model_ki, const NumericVector theta_ki, const std::string model_ti, const NumericVector theta_ti);
RcppExport SEXP _drugDemand_f_dose_new_cpp(SEXP usubjidSEXP, SEXP VSEXP, SEXP CSEXP, SEXP DSEXP, SEXP model_k0SEXP, SEXP theta_k0SEXP, SEXP model_t0SEXP, SEXP theta_t0SEXP, SEXP model_t1SEXP, SEXP theta_t1SEXP, SEXP model_kiSEXP, SEXP theta_kiSEXP, SEXP model_tiSEXP, SEXP theta_tiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const StringVector >::type usubjid(usubjidSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type V(VSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type C(CSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type D(DSEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_k0(model_k0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_k0(theta_k0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_t0(model_t0SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_t0(theta_t0SEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_t1(model_t1SEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_t1(theta_t1SEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_ki(model_kiSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_ki(theta_kiSEXP);
    Rcpp::traits::input_parameter< const std::string >::type model_ti(model_tiSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type theta_ti(theta_tiSEXP);
    rcpp_result_gen = Rcpp::wrap(f_dose_new_cpp(usubjid, V, C, D, model_k0, theta_k0, model_t0, theta_t0, model_t1, theta_t1, model_ki, theta_ki, model_ti, theta_ti));
    return rcpp_result_gen;
END_RCPP
}
// norm_rej
double norm_rej(const double a, const double b);
RcppExport SEXP _drugDemand_norm_rej(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(norm_rej(a, b));
    return rcpp_result_gen;
END_RCPP
}
// unif_rej
double unif_rej(const double a, const double b);
RcppExport SEXP _drugDemand_unif_rej(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(unif_rej(a, b));
    return rcpp_result_gen;
END_RCPP
}
// halfnorm_rej
double halfnorm_rej(const double a, const double b);
RcppExport SEXP _drugDemand_halfnorm_rej(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(halfnorm_rej(a, b));
    return rcpp_result_gen;
END_RCPP
}
// exp_rej
double exp_rej(const double a, const double b);
RcppExport SEXP _drugDemand_exp_rej(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    Rcpp::traits::input_parameter< const double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(exp_rej(a, b));
    return rcpp_result_gen;
END_RCPP
}
// rtnormcpp
double rtnormcpp(const double mean, const double sd, const double lower, const double upper);
RcppExport SEXP _drugDemand_rtnormcpp(SEXP meanSEXP, SEXP sdSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< const double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< const double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< const double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(rtnormcpp(mean, sd, lower, upper));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_drugDemand_f_dose_ongoing_cpp", (DL_FUNC) &_drugDemand_f_dose_ongoing_cpp, 8},
    {"_drugDemand_f_dose_new_cpp", (DL_FUNC) &_drugDemand_f_dose_new_cpp, 14},
    {"_drugDemand_norm_rej", (DL_FUNC) &_drugDemand_norm_rej, 2},
    {"_drugDemand_unif_rej", (DL_FUNC) &_drugDemand_unif_rej, 2},
    {"_drugDemand_halfnorm_rej", (DL_FUNC) &_drugDemand_halfnorm_rej, 2},
    {"_drugDemand_exp_rej", (DL_FUNC) &_drugDemand_exp_rej, 2},
    {"_drugDemand_rtnormcpp", (DL_FUNC) &_drugDemand_rtnormcpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_drugDemand(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
